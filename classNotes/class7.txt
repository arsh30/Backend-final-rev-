13th october  class 7
 WHAT WE DO ?
1) REVIEW :
    1.1) Make review schema include content,rating,user(kiss user ne dala hai ) and kis plan ke liye dala hai
    1.2) In plan model -> add -> avg rating of plan(jo review me rating daleg vo hmesha update hoga) and review(koi bhi review dala hai toh uski entry honi chaiye)

==========================
start
1) REVIEW MODEL:-> 
        eg: mongoose.Schema.ObjectId -> (yeh hme jo mongoose id deta hai vo aajegi puri)
    1.1) user: {   //yeh hme pura object chaiye hoga user ka ki id put kre or sare useraajaye review wale
        type: mongoose.Schema.ObjectId,  //yeh jo id hai uska pura object dega
        required: [true, "Review must belong to a user"],
        ref: "userModel"
    }  


=============================

GET ELEMENTS IN FACTORY.JS -> in this we are doing the queries like sort and find  select,paginate

previous code: 
function getElements(elementModel) {
  return async function (req, res) {
    //It will give the details of all users
    try {
      let users = await elementModel.find(); //find -> it gives the detail of all the users
      res.status(200).json({
        message: users,
      });
    } catch (err) {
      console.log(
        "error to get details of user!! please verify your email first"
      );
      res.status(500).json({
        message: " please verify your email first",
      });
    }
  };
}

UPDATE ONE:->

function getElements(elementModel) {
  return async function (req, res) {
    //It will give the details of all users
    try {
      let requestPromise;  //yeh promise hai yeh last me hi resolve krege
      //query
      if (req.query.myQuery) {  //request ke andr query hoti hai request is object, jo bhi param wali cheez hai vo query me aajati hai
        requestPromise = elementModel.find(req.query.myQuery);
      } else {
        requestPromise = elementModel.find();  //mean agar query hai toh upr wala if execute agar parameter me kuch nahi hai toh sab dedo
      }

      //sort
      if (req.query.sort) {
        requestPromise = requestPromise.sort(req.query.sort);   //means sort krdo jo bhi user ne diya hoga parameter me vo sort krdo
      }

      //select
      if (req.query.select) {  //means agar kuch select krna hai eg name,percentage, price unko alag alag krdege
        let params = req.query.select.split("%").join(" ");
        requestPromise = requestPromise.select(params);
      }

      //paginate
      let page = Number(req.query.page) || 1;   //rhs wala bydefault one hai
      let limit = Number(req.query.limit) || 4;  //means bydefault perpage pr kitne item honge ie 4
      let toSkip = (page - 1) * limit;
      requestPromise = requestPromise.skip(toSkip).limit(limit);

      let elements = await requestPromise;
      res.status(200).json({
        message: elements
      })
    } catch (err) {
      console.log(
        "error to get details of user!! please verify your email first"
      );
      res.status(500).json({
        message: " please verify your email first",
      });
    }
  };
}
